/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapV2FactoryMock,
  UniswapV2FactoryMockInterface,
} from "../UniswapV2FactoryMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lpTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161030d38038061030d833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b6101f6806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c9c653961461003b578063e6a439051461006b575b600080fd5b61005560048036038101906100509190610156565b61009b565b60405161006291906101a5565b60405180910390f35b61008560048036038101906100809190610156565b6100c7565b60405161009291906101a5565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610123826100f8565b9050919050565b61013381610118565b811461013e57600080fd5b50565b6000813590506101508161012a565b92915050565b6000806040838503121561016d5761016c6100f3565b5b600061017b85828601610141565b925050602061018c85828601610141565b9150509250929050565b61019f81610118565b82525050565b60006020820190506101ba6000830184610196565b9291505056fea26469706673582212201a7a037c1cb5455218df53923c438ba65e62eb0fdb76311c710b2a2ee61deb2664736f6c634300080b0033";

type UniswapV2FactoryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2FactoryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2FactoryMock__factory extends ContractFactory {
  constructor(...args: UniswapV2FactoryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2FactoryMock";
  }

  deploy(
    lpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV2FactoryMock> {
    return super.deploy(
      lpTokenAddress,
      overrides || {}
    ) as Promise<UniswapV2FactoryMock>;
  }
  getDeployTransaction(
    lpTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(lpTokenAddress, overrides || {});
  }
  attach(address: string): UniswapV2FactoryMock {
    return super.attach(address) as UniswapV2FactoryMock;
  }
  connect(signer: Signer): UniswapV2FactoryMock__factory {
    return super.connect(signer) as UniswapV2FactoryMock__factory;
  }
  static readonly contractName: "UniswapV2FactoryMock";
  public readonly contractName: "UniswapV2FactoryMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2FactoryMockInterface {
    return new utils.Interface(_abi) as UniswapV2FactoryMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2FactoryMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UniswapV2FactoryMock;
  }
}
