/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_devFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_burnFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_burnAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "excludedFromTax",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devAddress",
        type: "address",
      },
    ],
    name: "setDevAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_excludedAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_excluded",
        type: "bool",
      },
    ],
    name: "setTaxExclusion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002964380380620029648339818101604052810190620000379190620006ed565b868681600390805190602001906200005192919062000400565b5080600490805190602001906200006a92919062000400565b5050506200008d62000081620001af60201b60201c565b620001b760201b60201c565b620000ba3385600a620000a1919062000961565b87620000ae9190620009b2565b6200027d60201b60201c565b816006819055508260078190555033600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050505050505062000b86565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e79062000a74565b60405180910390fd5b6200030460008383620003f660201b60201c565b806002600082825462000318919062000a96565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200036f919062000a96565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003d6919062000b04565b60405180910390a3620003f260008383620003fb60201b60201c565b5050565b505050565b505050565b8280546200040e9062000b50565b90600052602060002090601f0160209004810192826200043257600085556200047e565b82601f106200044d57805160ff19168380011785556200047e565b828001600101855582156200047e579182015b828111156200047d57825182559160200191906001019062000460565b5b5090506200048d919062000491565b5090565b5b80821115620004ac57600081600090555060010162000492565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200051982620004ce565b810181811067ffffffffffffffff821117156200053b576200053a620004df565b5b80604052505050565b600062000550620004b0565b90506200055e82826200050e565b919050565b600067ffffffffffffffff821115620005815762000580620004df565b5b6200058c82620004ce565b9050602081019050919050565b60005b83811015620005b95780820151818401526020810190506200059c565b83811115620005c9576000848401525b50505050565b6000620005e6620005e08462000563565b62000544565b905082815260208101848484011115620006055762000604620004c9565b5b6200061284828562000599565b509392505050565b600082601f830112620006325762000631620004c4565b5b815162000644848260208601620005cf565b91505092915050565b6000819050919050565b62000662816200064d565b81146200066e57600080fd5b50565b600081519050620006828162000657565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006b58262000688565b9050919050565b620006c781620006a8565b8114620006d357600080fd5b50565b600081519050620006e781620006bc565b92915050565b600080600080600080600060e0888a0312156200070f576200070e620004ba565b5b600088015167ffffffffffffffff81111562000730576200072f620004bf565b5b6200073e8a828b016200061a565b975050602088015167ffffffffffffffff811115620007625762000761620004bf565b5b620007708a828b016200061a565b9650506040620007838a828b0162000671565b9550506060620007968a828b0162000671565b9450506080620007a98a828b0162000671565b93505060a0620007bc8a828b0162000671565b92505060c0620007cf8a828b01620006d6565b91505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200086c57808604811115620008445762000843620007de565b5b6001851615620008545780820291505b808102905062000864856200080d565b945062000824565b94509492505050565b6000826200088757600190506200095a565b816200089757600090506200095a565b8160018114620008b05760028114620008bb57620008f1565b60019150506200095a565b60ff841115620008d057620008cf620007de565b5b8360020a915084821115620008ea57620008e9620007de565b5b506200095a565b5060208310610133831016604e8410600b84101617156200092b5782820a905083811115620009255762000924620007de565b5b6200095a565b6200093a84848460016200081a565b92509050818404811115620009545762000953620007de565b5b81810290505b9392505050565b60006200096e826200064d565b91506200097b836200064d565b9250620009aa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000875565b905092915050565b6000620009bf826200064d565b9150620009cc836200064d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000a085762000a07620007de565b5b828202905092915050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000a5c601f8362000a13565b915062000a698262000a24565b602082019050919050565b6000602082019050818103600083015262000a8f8162000a4d565b9050919050565b600062000aa3826200064d565b915062000ab0836200064d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000ae85762000ae7620007de565b5b828201905092915050565b62000afe816200064d565b82525050565b600060208201905062000b1b600083018462000af3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000b6957607f821691505b6020821081141562000b805762000b7f62000b21565b5b50919050565b611dce8062000b966000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370d5ae05116100b8578063a457c2d71161007c578063a457c2d714610342578063a9059cbb14610372578063d0d41fe1146103a2578063dd62ed3e146103be578063f2fde38b146103ee578063fce589d81461040a57610137565b806370d5ae05146102ae578063715018a6146102cc5780638da5cb5b146102d657806395d89b41146102f4578063989763ef1461031257610137565b8063313ce567116100ff578063313ce567146101f457806339509351146102125780633ad10ef6146102425780636827e7641461026057806370a082311461027e57610137565b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461018a57806318d49861146101a857806323b872dd146101c4575b600080fd5b610144610428565b6040516101519190611406565b60405180910390f35b610174600480360381019061016f91906114c1565b6104ba565b604051610181919061151c565b60405180910390f35b6101926104dd565b60405161019f9190611546565b60405180910390f35b6101c260048036038101906101bd919061158d565b6104e7565b005b6101de60048036038101906101d991906115cd565b6105be565b6040516101eb919061151c565b60405180910390f35b6101fc6105ed565b604051610209919061163c565b60405180910390f35b61022c600480360381019061022791906114c1565b6105f6565b604051610239919061151c565b60405180910390f35b61024a6106a0565b6040516102579190611666565b60405180910390f35b6102686106c6565b6040516102759190611546565b60405180910390f35b61029860048036038101906102939190611681565b6106cc565b6040516102a59190611546565b60405180910390f35b6102b6610714565b6040516102c39190611666565b60405180910390f35b6102d461073a565b005b6102de6107c2565b6040516102eb9190611666565b60405180910390f35b6102fc6107ec565b6040516103099190611406565b60405180910390f35b61032c60048036038101906103279190611681565b61087e565b604051610339919061151c565b60405180910390f35b61035c600480360381019061035791906114c1565b61089e565b604051610369919061151c565b60405180910390f35b61038c600480360381019061038791906114c1565b610988565b604051610399919061151c565b60405180910390f35b6103bc60048036038101906103b79190611681565b610b78565b005b6103d860048036038101906103d391906116ae565b610c38565b6040516103e59190611546565b60405180910390f35b61040860048036038101906104039190611681565b610cbf565b005b610412610db7565b60405161041f9190611546565b60405180910390f35b6060600380546104379061171d565b80601f01602080910402602001604051908101604052809291908181526020018280546104639061171d565b80156104b05780601f10610485576101008083540402835291602001916104b0565b820191906000526020600020905b81548152906001019060200180831161049357829003601f168201915b5050505050905090565b6000806104c5610dbd565b90506104d2818585610dc5565b600191505092915050565b6000600254905090565b6104ef610dbd565b73ffffffffffffffffffffffffffffffffffffffff1661050d6107c2565b73ffffffffffffffffffffffffffffffffffffffff1614610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055a9061179b565b60405180910390fd5b80600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000806105c9610dbd565b90506105d6858285610f90565b6105e185858561101c565b60019150509392505050565b60006012905090565b600080610601610dbd565b9050610695818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461069091906117ea565b610dc5565b600191505092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610742610dbd565b73ffffffffffffffffffffffffffffffffffffffff166107606107c2565b73ffffffffffffffffffffffffffffffffffffffff16146107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad9061179b565b60405180910390fd5b6107c0600061129d565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107fb9061171d565b80601f01602080910402602001604051908101604052809291908181526020018280546108279061171d565b80156108745780601f1061084957610100808354040283529160200191610874565b820191906000526020600020905b81548152906001019060200180831161085757829003601f168201915b5050505050905090565b600a6020528060005260406000206000915054906101000a900460ff1681565b6000806108a9610dbd565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508381101561096f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610966906118b2565b60405180910390fd5b61097c8286868403610dc5565b60019250505092915050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610a2b5750600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610a835750600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15610a9f57610a9a610a93610dbd565b848461101c565b610b6e565b6000606460065484610ab191906118d2565b610abb919061195b565b90506000606460075485610acf91906118d2565b610ad9919061195b565b9050610b0f610ae6610dbd565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461101c565b610b43610b1a610dbd565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361101c565b610b6b610b4e610dbd565b86838588610b5c919061198c565b610b66919061198c565b61101c565b50505b6001905092915050565b610b80610dbd565b73ffffffffffffffffffffffffffffffffffffffff16610b9e6107c2565b73ffffffffffffffffffffffffffffffffffffffff1614610bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610beb9061179b565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610cc7610dbd565b73ffffffffffffffffffffffffffffffffffffffff16610ce56107c2565b73ffffffffffffffffffffffffffffffffffffffff1614610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d329061179b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da290611a32565b60405180910390fd5b610db48161129d565b50565b60065481565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2c90611ac4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9c90611b56565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f839190611546565b60405180910390a3505050565b6000610f9c8484610c38565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110165781811015611008576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fff90611bc2565b60405180910390fd5b6110158484848403610dc5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561108c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108390611c54565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f390611ce6565b60405180910390fd5b611107838383611363565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561118d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118490611d78565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461122091906117ea565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112849190611546565b60405180910390a3611297848484611368565b50505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156113a757808201518184015260208101905061138c565b838111156113b6576000848401525b50505050565b6000601f19601f8301169050919050565b60006113d88261136d565b6113e28185611378565b93506113f2818560208601611389565b6113fb816113bc565b840191505092915050565b6000602082019050818103600083015261142081846113cd565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114588261142d565b9050919050565b6114688161144d565b811461147357600080fd5b50565b6000813590506114858161145f565b92915050565b6000819050919050565b61149e8161148b565b81146114a957600080fd5b50565b6000813590506114bb81611495565b92915050565b600080604083850312156114d8576114d7611428565b5b60006114e685828601611476565b92505060206114f7858286016114ac565b9150509250929050565b60008115159050919050565b61151681611501565b82525050565b6000602082019050611531600083018461150d565b92915050565b6115408161148b565b82525050565b600060208201905061155b6000830184611537565b92915050565b61156a81611501565b811461157557600080fd5b50565b60008135905061158781611561565b92915050565b600080604083850312156115a4576115a3611428565b5b60006115b285828601611476565b92505060206115c385828601611578565b9150509250929050565b6000806000606084860312156115e6576115e5611428565b5b60006115f486828701611476565b935050602061160586828701611476565b9250506040611616868287016114ac565b9150509250925092565b600060ff82169050919050565b61163681611620565b82525050565b6000602082019050611651600083018461162d565b92915050565b6116608161144d565b82525050565b600060208201905061167b6000830184611657565b92915050565b60006020828403121561169757611696611428565b5b60006116a584828501611476565b91505092915050565b600080604083850312156116c5576116c4611428565b5b60006116d385828601611476565b92505060206116e485828601611476565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061173557607f821691505b60208210811415611749576117486116ee565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611785602083611378565b91506117908261174f565b602082019050919050565b600060208201905081810360008301526117b481611778565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117f58261148b565b91506118008361148b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611835576118346117bb565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061189c602583611378565b91506118a782611840565b604082019050919050565b600060208201905081810360008301526118cb8161188f565b9050919050565b60006118dd8261148b565b91506118e88361148b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611921576119206117bb565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006119668261148b565b91506119718361148b565b9250826119815761198061192c565b5b828204905092915050565b60006119978261148b565b91506119a28361148b565b9250828210156119b5576119b46117bb565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a1c602683611378565b9150611a27826119c0565b604082019050919050565b60006020820190508181036000830152611a4b81611a0f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611aae602483611378565b9150611ab982611a52565b604082019050919050565b60006020820190508181036000830152611add81611aa1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b40602283611378565b9150611b4b82611ae4565b604082019050919050565b60006020820190508181036000830152611b6f81611b33565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611bac601d83611378565b9150611bb782611b76565b602082019050919050565b60006020820190508181036000830152611bdb81611b9f565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611c3e602583611378565b9150611c4982611be2565b604082019050919050565b60006020820190508181036000830152611c6d81611c31565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611cd0602383611378565b9150611cdb82611c74565b604082019050919050565b60006020820190508181036000830152611cff81611cc3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611d62602683611378565b9150611d6d82611d06565b604082019050919050565b60006020820190508181036000830152611d9181611d55565b905091905056fea2646970667358221220d15e7880a94ca79da8eb8a0a3358ab8dd77fbd0065e0c7eab3621be37c22cf3764736f6c634300080b0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Token";
  }

  deploy(
    _name: string,
    _symbol: string,
    _supply: BigNumberish,
    _decimals: BigNumberish,
    _devFee: BigNumberish,
    _burnFee: BigNumberish,
    _burnAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      _name,
      _symbol,
      _supply,
      _decimals,
      _devFee,
      _burnFee,
      _burnAddress,
      overrides || {}
    ) as Promise<Token>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _supply: BigNumberish,
    _decimals: BigNumberish,
    _devFee: BigNumberish,
    _burnFee: BigNumberish,
    _burnAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _supply,
      _decimals,
      _devFee,
      _burnFee,
      _burnAddress,
      overrides || {}
    );
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly contractName: "Token";
  public readonly contractName: "Token";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
