/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Airdrop, AirdropInterface } from "../Airdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_burnAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountToClaim",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minBaseCoinBalance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "eventBurnRemainingTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "eventClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "eventSetAmountToClaim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "amount",
        type: "address",
      },
    ],
    name: "eventSetTokenAddress",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressReceived",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "amountToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnRemainingTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBaseCoinBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setAmountToClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timeSeconds",
        type: "uint256",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019e1380380620019e1833981810160405281019062000037919062000269565b620000576200004b620000f860201b60201c565b6200010060201b60201c565b6001808190555083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060078190555050505050620002db565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f682620001c9565b9050919050565b6200020881620001e9565b81146200021457600080fd5b50565b6000815190506200022881620001fd565b92915050565b6000819050919050565b62000243816200022e565b81146200024f57600080fd5b50565b600081519050620002638162000238565b92915050565b60008060008060808587031215620002865762000285620001c4565b5b6000620002968782880162000217565b9450506020620002a98782880162000217565b9350506040620002bc8782880162000252565b9250506060620002cf8782880162000252565b91505092959194509250565b6116f680620002eb6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806383408d7311610097578063af35ae2711610066578063af35ae271461023d578063d54ad2a11461025b578063f2fde38b14610279578063fc0c546a1461029557610100565b806383408d73146101db5780638da4d3c9146101e55780638da5cb5b1461020357806395805dad1461022157610100565b80634e71d92d116100d35780634e71d92d1461018b5780635bf9d5e314610195578063614d85e1146101b3578063715018a6146101d157610100565b80630cd1e98814610105578063205306b41461013557806326a4e8d2146101535780633ba09c261461016f575b600080fd5b61011f600480360381019061011a9190610e47565b6102b3565b60405161012c9190610e8f565b60405180910390f35b61013d6102d3565b60405161014a9190610ec3565b60405180910390f35b61016d60048036038101906101689190610e47565b6102d9565b005b61018960048036038101906101849190610f0a565b6103d0565b005b61019361048d565b005b61019d6107c8565b6040516101aa9190610ec3565b60405180910390f35b6101bb6107ce565b6040516101c89190610ec3565b60405180910390f35b6101d96107d4565b005b6101e361085c565b005b6101ed6109f7565b6040516101fa9190610ec3565b60405180910390f35b61020b6109fd565b6040516102189190610f46565b60405180910390f35b61023b60048036038101906102369190610f0a565b610a26565b005b610245610b51565b6040516102529190610ec3565b60405180910390f35b610263610bf4565b6040516102709190610ec3565b60405180910390f35b610293600480360381019061028e9190610e47565b610bfa565b005b61029d610cf2565b6040516102aa9190610fc0565b60405180910390f35b60086020528060005260406000206000915054906101000a900460ff1681565b60035481565b6102e1610d18565b73ffffffffffffffffffffffffffffffffffffffff166102ff6109fd565b73ffffffffffffffffffffffffffffffffffffffff1614610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90611038565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffbb066821c43e1ddf8277c719db2479a844a5336be36bb070571f6182629fc26816040516103c59190610f46565b60405180910390a150565b6103d8610d18565b73ffffffffffffffffffffffffffffffffffffffff166103f66109fd565b73ffffffffffffffffffffffffffffffffffffffff161461044c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044390611038565b60405180910390fd5b806003819055507fd7ceccbe9ee0215970202defe07dc8b34a924aee3675a6940da0ba0cb6f3bdbf816040516104829190610ec3565b60405180910390a150565b600260015414156104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca906110a4565b60405180910390fd5b600260018190555060006005541415610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611136565b60405180910390fd5b4260055411610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c906111a2565b60405180910390fd5b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156105f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e990611234565b60405180910390fd5b6007543373ffffffffffffffffffffffffffffffffffffffff1631101561064e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610645906112c6565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336003546040518363ffffffff1660e01b81526004016106ad9291906112e6565b6020604051808303816000875af11580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f0919061133b565b6106f957600080fd5b6001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506004600081548092919061076490611397565b91905055506003546002600082825461077d91906113e0565b925050819055507fd24ca946efc90ae8f7914e6585f3f12b513f4e8cc3179711ed7c63288420bf4f336003546040516107b79291906112e6565b60405180910390a160018081905550565b60075481565b60055481565b6107dc610d18565b73ffffffffffffffffffffffffffffffffffffffff166107fa6109fd565b73ffffffffffffffffffffffffffffffffffffffff1614610850576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084790611038565b60405180910390fd5b61085a6000610d20565b565b600060055414156108a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610899906114a8565b60405180910390fd5b42600554106108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9061153a565b60405180910390fd5b60006108f0610b51565b9050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016109719291906112e6565b6020604051808303816000875af1158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b4919061133b565b6109bd57600080fd5b7f4b14eed67345aa690777c138d276e39392861e570bd4383f482eab12b76de1fc816040516109ec9190610ec3565b60405180910390a150565b60045481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026001541415610a6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a63906110a4565b60405180910390fd5b6002600181905550610a7c610d18565b73ffffffffffffffffffffffffffffffffffffffff16610a9a6109fd565b73ffffffffffffffffffffffffffffffffffffffff1614610af0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae790611038565b60405180910390fd5b600060055414610b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2c906115cc565b60405180910390fd5b8042610b4191906113e0565b6005819055506001808190555050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610bae9190610f46565b602060405180830381865afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef9190611601565b905090565b60025481565b610c02610d18565b73ffffffffffffffffffffffffffffffffffffffff16610c206109fd565b73ffffffffffffffffffffffffffffffffffffffff1614610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d90611038565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ce6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdd906116a0565b60405180910390fd5b610cef81610d20565b50565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1482610de9565b9050919050565b610e2481610e09565b8114610e2f57600080fd5b50565b600081359050610e4181610e1b565b92915050565b600060208284031215610e5d57610e5c610de4565b5b6000610e6b84828501610e32565b91505092915050565b60008115159050919050565b610e8981610e74565b82525050565b6000602082019050610ea46000830184610e80565b92915050565b6000819050919050565b610ebd81610eaa565b82525050565b6000602082019050610ed86000830184610eb4565b92915050565b610ee781610eaa565b8114610ef257600080fd5b50565b600081359050610f0481610ede565b92915050565b600060208284031215610f2057610f1f610de4565b5b6000610f2e84828501610ef5565b91505092915050565b610f4081610e09565b82525050565b6000602082019050610f5b6000830184610f37565b92915050565b6000819050919050565b6000610f86610f81610f7c84610de9565b610f61565b610de9565b9050919050565b6000610f9882610f6b565b9050919050565b6000610faa82610f8d565b9050919050565b610fba81610f9f565b82525050565b6000602082019050610fd56000830184610fb1565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611022602083610fdb565b915061102d82610fec565b602082019050919050565b6000602082019050818103600083015261105181611015565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061108e601f83610fdb565b915061109982611058565b602082019050919050565b600060208201905081810360008301526110bd81611081565b9050919050565b7f636c61696d3a2041697264726f7020686173206e6f742073746172746564207960008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000611120602283610fdb565b915061112b826110c4565b604082019050919050565b6000602082019050818103600083015261114f81611113565b9050919050565b7f636c61696d3a2041697264726f702068617320656e64656420616c7265616479600082015250565b600061118c602083610fdb565b915061119782611156565b602082019050919050565b600060208201905081810360008301526111bb8161117f565b9050919050565b7f636c61696d3a20596f75722061646472657373206861766520616c726561647960008201527f20636c61696d656420796f757220746f6b656e73000000000000000000000000602082015250565b600061121e603483610fdb565b9150611229826111c2565b604082019050919050565b6000602082019050818103600083015261124d81611211565b9050919050565b7f636c61696d3a20596f75722077616c6c6574206164647265737320646f65732060008201527f6e6f74206861766520656e6f756768206261736520636f696e00000000000000602082015250565b60006112b0603983610fdb565b91506112bb82611254565b604082019050919050565b600060208201905081810360008301526112df816112a3565b9050919050565b60006040820190506112fb6000830185610f37565b6113086020830184610eb4565b9392505050565b61131881610e74565b811461132357600080fd5b50565b6000815190506113358161130f565b92915050565b60006020828403121561135157611350610de4565b5b600061135f84828501611326565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113a282610eaa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113d5576113d4611368565b5b600182019050919050565b60006113eb82610eaa565b91506113f683610eaa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561142b5761142a611368565b5b828201905092915050565b7f6275726e52656d61696e696e67546f6b656e733a2041697264726f702068617360008201527f206e6f7420737461727465642079657400000000000000000000000000000000602082015250565b6000611492603083610fdb565b915061149d82611436565b604082019050919050565b600060208201905081810360008301526114c181611485565b9050919050565b7f6275726e52656d61696e696e67546f6b656e733a2041697264726f702068617360008201527f206e6f7420656e64656420796574000000000000000000000000000000000000602082015250565b6000611524602e83610fdb565b915061152f826114c8565b604082019050919050565b6000602082019050818103600083015261155381611517565b9050919050565b7f73746172743a2041697264726f702068617320616c726561647920737461727460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006115b6602283610fdb565b91506115c18261155a565b604082019050919050565b600060208201905081810360008301526115e5816115a9565b9050919050565b6000815190506115fb81610ede565b92915050565b60006020828403121561161757611616610de4565b5b6000611625848285016115ec565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061168a602683610fdb565b91506116958261162e565b604082019050919050565b600060208201905081810360008301526116b98161167d565b905091905056fea2646970667358221220fa059b53c105228148cc97ff654bd769c004701f8802488e4bd211ceade5de5964736f6c634300080b0033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Airdrop";
  }

  deploy(
    _tokenAddress: string,
    _burnAddress: string,
    _amountToClaim: BigNumberish,
    _minBaseCoinBalance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Airdrop> {
    return super.deploy(
      _tokenAddress,
      _burnAddress,
      _amountToClaim,
      _minBaseCoinBalance,
      overrides || {}
    ) as Promise<Airdrop>;
  }
  getDeployTransaction(
    _tokenAddress: string,
    _burnAddress: string,
    _amountToClaim: BigNumberish,
    _minBaseCoinBalance: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenAddress,
      _burnAddress,
      _amountToClaim,
      _minBaseCoinBalance,
      overrides || {}
    );
  }
  attach(address: string): Airdrop {
    return super.attach(address) as Airdrop;
  }
  connect(signer: Signer): Airdrop__factory {
    return super.connect(signer) as Airdrop__factory;
  }
  static readonly contractName: "Airdrop";
  public readonly contractName: "Airdrop";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new utils.Interface(_abi) as AirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Airdrop {
    return new Contract(address, _abi, signerOrProvider) as Airdrop;
  }
}
